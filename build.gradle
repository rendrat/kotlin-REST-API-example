buildscript {
    ext {
        yoVersion = "0.1.8"
        vertxVersion = "3.5.0"
        daggerVersion = '2.12'
        jUnitVersion = '4.12'
    }

    repositories {
        jcenter()
    }

}

plugins {
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.2.10"
    id "org.jetbrains.kotlin.kapt" version "1.2.10"
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

apply plugin: 'idea'

group 'org.rendra.driver'

mainClassName = 'org.rendra.driver.Application'

repositories {
    jcenter()
    maven {
        url "https://dl.bintray.com/jasoet/yoframework"
    }
}

dependencies {
    compile "id.yoframework:core:${yoVersion}"
    compile "id.yoframework:web:${yoVersion}"
    compile "id.yoframework:morphia:${yoVersion}"

    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    testCompile "junit:junit:$jUnitVersion"

}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

idea {
    module {
        testSourceDirs += file('build/generated/source/kapt/test')
        sourceDirs += file('build/generated/source/kapt/main')
    }
}

shadowJar {
    baseName = 'driver'
    classifier = 'api'
}

task docker(type: Zip, dependsOn: 'shadowJar') {
    doLast {
        copy {
            from "${projectDir}/deployment/"
            into "${buildDir}/dist"
            include 'docker-compose.yml'
        }
    }
    from("${projectDir}/deployment/") {
        include("*/*", "*")
    }
    from("${buildDir}/libs/") {
        into "api"
        include '*.jar'
    }
    archiveName "docker-kotlinAPI-drivers.zip"
    destinationDir new File("$buildDir", 'dist')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}
